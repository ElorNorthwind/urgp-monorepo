-- Статусы объектов
DROP TABLE IF EXISTS equity.object_status_types CASCADE;
CREATE TABLE equity.object_status_types
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name character varying(255) NOT NULL,
    priority integer NOT NULL DEFAULT 0,
    category character varying(255),
    PRIMARY KEY (id)
);
ALTER TABLE equity.object_status_types
    OWNER to renovation_user;

INSERT INTO equity.object_status_types (id, name, priority, cagerogy) VALUES
    (6, 'Статус не определен', 0, 'unknown'),
    (1, 'Не обращался', 1, 'give-work'),
    (7, 'Рассмотрение документов', 2, 'give-work'),
    (8, 'Выносится на РГ', 3, 'give-work'),
    (9, 'Снято с РГ', 4, 'give-work'),
    (10, 'Решение РГ', 5, 'give-work'),
    (2, 'Акт подписан', 6, 'give-work'),
    (3, 'Передано дольщику', 7, 'give-done'),
    (4, 'Подрежит передаче городу', 8, 'take-work'),
    (5, 'Передано городу', 9, 'take-done');

-- Типы объектов
DROP TABLE IF EXISTS equity.object_types CASCADE;
CREATE TABLE equity.object_types
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name character varying(255) NOT NULL,
    PRIMARY KEY (id)
);
ALTER TABLE equity.object_types
    OWNER to renovation_user;
INSERT INTO equity.object_types (id, name) VALUES
    (1, 'квартира'),
    (2, 'машино-место'),
    (3, 'нежилое пом.');

-- Типы предметом требований
DROP TABLE IF EXISTS equity.claim_item_types CASCADE;
CREATE TABLE equity.claim_item_types
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name character varying(255) NOT NULL,
    PRIMARY KEY (id)
);
ALTER TABLE equity.claim_item_types
    OWNER to renovation_user;
INSERT INTO equity.claim_item_types (id, name) VALUES
    (1, 'квартира'),
    (2, 'машино-место'),
    (3, 'деньги');

-- Типы операций
DROP TABLE IF EXISTS equity.operation_types CASCADE;
CREATE TABLE equity.operation_types
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name character varying(255) NOT NULL,
    fullname text,
    category character varying(255),
    priority integer NOT NULL DEFAULT 0,
    sort_order integer NOT NULL DEFAULT 0,
    is_important boolean NOT NULL DEFAULT false,
    fields text[] NOT NULL DEFAULT ARRAY['date', 'notes', 'number']::text

    PRIMARY KEY (id)
);
ALTER TABLE equity.operation_types
    OWNER to renovation_user;
INSERT INTO equity.operation_types (id, name, fullname, category, priority, sort_order) VALUES
(6, 'Запрошено заключение - подписать акт', 'Запрошено заключени о возможности подписать акт', '1. заключения', 4, 13),
(11, 'Запрошено заключение - выдать ключи', 'Запрошено заключени о возможности выдачи ключей', '1. заключения', 4, 14),
(14, 'Заключение УПОЖС дано', 'Ответ УПОЖС (Спесивцева С.В.)', '1. заключения', 5, 15),
(15, 'Заключение УОРК дано', 'Ответ УОРК (Стифеева А.С.)', '1. заключения', 5, 16),
(7, 'Заключение УРЖП дано', 'Ответ УРЖП (Лукьянов М.Г.)', '1. заключения', 5, 17),
(19, 'Заключение УПОЗИ дано', 'Ответ УПОЗИ (Семенюта Н.В.)', '1. заключения', 5, 18),

(20, 'Получен пакет документов', 'Дольщик представил пакет документов', '2. прием', 3, 9),
(5, 'Запись на прием - подача документов', 'Дольщик записался на подачу документов', '2. прием', 3, 10),
(12, 'Запись на прием - консультация', 'Заявитель записался на консультацию', '2. прием', 2, 11),
(13, 'Консультация оказана', 'Заявителю дана консультация', '2. прием', 3, 12),

(21, 'Подготовка на РГ', 'Материал подготовлен на Рабочую группу', '3. рабочая группа', 10, 19),
(22, 'Решение РГ', 'Рабочая группа вынесла решение', '3. рабочая группа', 11, 20),
(23, 'Снято с РГ', 'Снято с рассмотрения РГ', '3. рабочая группа', 11, 21),

(1, 'Акт подписан', 'Подписан акт приема-передачи помещения', '4. выдача', 12, 22),
(16, 'Выданы ключи', 'Дольщику выданы ключи от помещения', '4. выдача', 13, 23),

(4, 'Дефекты выявлены', 'При осмотре выявлены дефекты', '5. дефекты', 1, 6),
(2, 'Дефектная ведомость открыта', 'Открыта дефектная ведомость', '5. дефекты', 1, 7),
(3, 'Дефектная ведомость закрыта', 'Закрыта дефектная ведомость', '5. дефекты', 2, 8), 

(17, 'Примечание', 'Информация по помещению', '6. информация', 0, 1),
(8, 'Выявлены признаки двойной продажи', 'По квартире выявлены конкурирующие требования', '6. информация', 0, 2),
(18, 'Двойная продажа не подтверждена', 'Сделан вывод об отсутствии двойной продажи', '6. информация', 1, 3),
(9, 'Выявлены проблемы идентификации', 'Имеются сомнения о соответствии требования данному помещению', '6. информация', 0, 4),
(10, 'Проблемы идентификации сняты', 'Сомнения в соответствии требования и помещения сняты', '6. информация', 1, 5);

ALTER TABLE equity.operation_types
    OWNER to renovation_user;
INSERT INTO equity.operation_types (id, name) VALUES
    (1, 'квартира'),
    (2, 'машино-место'),
    (3, 'нежилое пом.');


-- Типы источников требований
DROP TABLE IF EXISTS equity.claim_source_types CASCADE;
CREATE TABLE equity.claim_source_types
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name character varying(255) NOT NULL,
    priority integer NOT NULL,
    PRIMARY KEY (id)
);
ALTER TABLE equity.claim_source_types
    OWNER to renovation_user;
INSERT INTO equity.claim_source_types (id, name, priority) VALUES
    (1, 'Информация застройщика', 2),
    (2, 'РТУС (рабочий)', 3),
    (3, 'РТУС (официальный)', 4);

-- Жилые комплексы
DROP TABLE IF EXISTS equity.complexes CASCADE;
CREATE TABLE equity.complexes
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    name character varying(255) NOT NULL,
    developer character varying(255),
    developer_short character varying(255),
    transfer_date timestamp with time zone,
    district character varying(255),
    old_developer text,
    bankruptcy_case text,
    bankruptcy_end_date timestamp with time zone,
    PRIMARY KEY (id)
);
ALTER TABLE equity.complexes
    OWNER to renovation_user;

INSERT INTO equity.complexes (id, name, developer, developer_short) VALUES
    (1, 'Царицыно', 'АО "Мосотделстрой 1"', 'МОС1'),
    (2, 'Марушкино', 'АО "Мосотделстрой 1"', 'МОС1'),
    (3, 'Терлецкий парк', 'АО "Мосотделстрой 1"', 'МОС1'),
    (4, 'Кокошкино', 'Фонд защиты прав дольщиков', 'Фонд'),
    (5, 'Малыгина', 'Фонд защиты прав дольщиков', 'Фонд'),
    (6, 'Легенда', 'Фонд защиты прав дольщиков', 'Фонд'),
    (7, 'Троицк Е-39', 'Фонд защиты прав дольщиков', 'Фонд'),
    (8, 'Остров Эрин', 'Фонд защиты прав дольщиков', 'Фонд'),
    (9, 'Академ Палас', 'Фонд защиты прав дольщиков', 'Фонд'),
    (10, 'Воскресенское', 'Фонд защиты прав дольщиков', 'Фонд'),
    (11, 'Квартал Триумфальный', 'Фонд защиты прав дольщиков', 'Фонд');

-- Корпуса
DROP TABLE IF EXISTS equity.buildings CASCADE;
CREATE TABLE equity.buildings
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,

    created_at timestamp with time zone DEFAULT (now())::timestamp(0) with time zone,
    created_by_id integer REFERENCES renovation.users(id) ON DELETE SET NULL,
    updated_at timestamp with time zone,
    updated_by_id integer REFERENCES renovation.users(id) ON DELETE SET NULL,

    complex_id integer REFERENCES equity.complexes(id),
    unom bigint,
    cad_num character varying(255),

    address_short character varying(255),
    address_full character varying(255),
    address_construction character varying(255),
    address_construction_short character varying(255),

    is_done boolean NOT NULL DEFAULT true,
    problems text[] NOT NULL DEFAULT ARRAY[]::text,

	PRIMARY KEY (id)
);
ALTER TABLE equity.buildings
    OWNER to renovation_user;


-- Объекты
DROP TABLE IF EXISTS equity.objects CASCADE;
CREATE TABLE equity.objects
(
	id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,

    created_at timestamp with time zone DEFAULT (now())::timestamp(0) with time zone,
    created_by_id integer REFERENCES renovation.users(id) ON DELETE SET NULL,
    updated_at timestamp with time zone,
    updated_by_id integer REFERENCES renovation.users(id) ON DELETE SET NULL,

    legacy_pk character varying(255) NOT NULL,

    building_id integer NOT NULL REFERENCES equity.buildings(id),
    object_type_id integer NOT NULL REFERENCES equity.object_types(id),
    is_identified boolean NOT NULL DEFAULT true,

    cad_num character varying(255),
    unkv integer,

    rooms integer,
    floor integer,
    s_obsh numeric,
    num character varying(255),

    egrn_title_type text,
    egrn_title_date timestamp with time zone,
    egrn_title_num text,
    egrn_address text,
    egrn_position text,
    egrn_holder_name text,
    egrn_holder_full text,
    egrn_holder_type text,
    egrn_source text,
    egrn_status character varying(255),

    -- Денормализация требований
    claim_count integer NOT NULL DEFAULT 0,
    first_claim_date timestamp with time zone,
    sum_unpaid numeric NOT NULL DEFAULT 0,
    creditors text,
    basis text,

    -- Денормализация операций
    op_all_notes text,
    op_all_fio text,
    op_all_numbers text,

    op_docs_id integer,
    op_docs_date timestamp with time zone,
    op_docs_notes text,
    op_docs_fio text,
    op_docs_result text,
    op_docs_author text,

    op_urgp_id integer,
    op_urgp_date timestamp with time zone,
    op_urgp_notes text,
    op_urgp_fio text,
    op_urgp_result text,
    op_urgp_author text,

    op_upozhs_id integer,
    op_upozhs_date timestamp with time zone,
    op_upozhs_notes text,
    op_upozhs_fio text,
    op_upozhs_result text,
    op_upozhs_author text,

    op_uork_id integer,
    op_uork_date timestamp with time zone,
    op_uork_notes text,
    op_uork_fio text,
    op_uork_result text,
    op_uork_author text,

    op_unpozi_id integer,
    op_unpozi_date timestamp with time zone,
    op_unpozi_notes text,
    op_unpozi_fio text,
    op_unpozi_result text,
    op_unpozi_author text,

    op_rg_prep_id integer,
    op_rg_prep_date timestamp with time zone,
    op_rg_prep_notes text,
    op_rg_prep_fio text,

    op_rg_decision_id integer,
    op_rg_decision_date timestamp with time zone,
    op_rg_decision_notes text,
    op_rg_decision_number text,
    op_rg_decision_result text,
    op_rg_decision_fio text,

    op_rg_rejection_id integer,
    op_rg_rejection_date timestamp with time zone,
    op_rg_rejection_notes text,
    op_rg_rejection_result text,
    op_rg_rejection_fio text,

    op_defects_id integer,
    op_defects_date timestamp with time zone,
    op_defects_notes text,

    op_act_id integer,
    op_act_date timestamp with time zone,
    op_act_notes text,

    op_keys_id integer,
    op_keys_date timestamp with time zone,
    op_keys_notes text,

    op_doublesell_id integer,
    op_doublesell_type_id integer,
    op_doublesell_date timestamp with time zone,
    op_doublesell_notes text,

    op_identification_id integer,
    op_identification_type_id integer,
    op_identification_date timestamp with time zone,
    op_identification_notes text,

    npp integer GENERATED ALWAYS AS (("substring"((num)::text, '\d+'::text))::integer) STORED;
	PRIMARY KEY (id)
);
CREATE INDEX idx_equity_objects_building_id ON equity.objects(building_id);
CREATE INDEX idx_equity_objects_object_type_id ON equity.objects(object_type_id);
CREATE INDEX idx_equity_objects_is_identified ON equity.objects(is_identified);
CREATE INDEX idx_equity_objects_npp ON equity.objects(npp);
ALTER TABLE equity.objects
    OWNER to renovation_user;

-- Требования
DROP TABLE IF EXISTS equity.claims CASCADE;
CREATE TABLE equity.claims
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    object_id integer NOT NULL REFERENCES equity.objects(id),

    created_at timestamp with time zone DEFAULT (now())::timestamp(0) with time zone,
    created_by_id integer REFERENCES renovation.users(id) ON DELETE SET NULL,
    updated_at timestamp with time zone,
    updated_by_id integer REFERENCES renovation.users(id) ON DELETE SET NULL,

    legacy_pk character varying(255) NOT NULL,
    legacy_fk_object character varying(255) NOT NULL,
    claim_item_type_id integer NOT NULL REFERENCES equity.claim_item_types(id),
    claim_source_type_id integer NOT NULL REFERENCES equity.claim_source_types(id),
    source text,

    claim_registry_date timestamp with time zone,
    claim_registry_num character varying(255),
    creditor_registry_num character varying(255),    
    basis text,
    legal_act text,
    change_basis text,
    subject text,
    sum_paid numeric,
    sum_unpaid numeric,
    sum_damages numeric,

    creditor_name text,
    creditor_documents text,
    creditor_address text,
    creditor_contacts text,
    
    claim_settlement_reason character varying(255),
    claim_settlement_date timestamp with time zone,
    claim_exclusion_reason character varying(255),
    claim_exclusion_date timestamp with time zone,

    claim_status character varying(255),
    notes text,

    identification_notes text,

    unit character varying(50),
    section integer,
    floor integer,
    room_count integer,
    s numeric,
    section_order integer,
    num_project character varying(255),

    PRIMARY KEY (id)
);
CREATE INDEX idx_claims_object_id ON equity.claims USING btree (object_id);
CREATE INDEX idx_claims_claim_item_type_id ON equity.claims USING btree (claim_item_type_id);
CREATE INDEX idx_claims_claim_status ON equity.claims USING btree (claim_status);
CREATE INDEX idx_claims_priority ON equity.claims USING btree (priority);
ALTER TABLE equity.claims
    OWNER to renovation_user;

-- Операции
DROP TABLE IF EXISTS equity.operations CASCADE;
CREATE TABLE equity.operations
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    object_id integer NOT NULL REFERENCES equity.objects(id),
    claim_id integer REFERENCES equity.claims(id),

    created_at timestamp with time zone DEFAULT (now())::timestamp(0) with time zone,
    created_by_id integer REFERENCES renovation.users(id) ON DELETE SET NULL,
    updated_at timestamp with time zone,
    updated_by_id integer REFERENCES renovation.users(id) ON DELETE SET NULL,

    legacy_fk_object character varying(255),
    legacy_fk_claim character varying(255),

    type_id integer NOT NULL DEFAULT 17 REFERENCES equity.operation_types(id),
    source character varying(255) DEFAULT 'Введено пользователем'::character varying,
    date timestamp with time zone,
    notes text,
    fio text,
    number character varying(255),
    result character varying(255),

    PRIMARY KEY (id)
);
CREATE INDEX idx_operations_object_id ON equity.operations USING btree (object_id);
CREATE INDEX idx_operations_claim_id ON equity.operations USING btree (claim_id);
CREATE INDEX idx_operations_type_id ON equity.operations USING btree (type_id);
CREATE INDEX idx_operations_sort_order ON equity.operations USING btree (object_id, date NULLS LAST, created_at NULLS LAST, id DESC);
ALTER TABLE equity.operations
    OWNER to renovation_user;




-- История операций
DROP TABLE IF EXISTS equity.operations_history CASCADE;
CREATE TABLE equity.operations_history
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
    operation_id integer NOT NULL,
    object_id integer NOT NULL,
    claim_id integer,

    created_at timestamp with time zone DEFAULT (now())::timestamp(0) with time zone,
    created_by_id integer REFERENCES renovation.users(id) ON DELETE SET NULL,
    updated_at timestamp with time zone,
    updated_by_id integer REFERENCES renovation.users(id) ON DELETE SET NULL,

    type_id integer NOT NULL DEFAULT 17 REFERENCES equity.operation_types(id),
    source character varying(255) DEFAULT 'Введено пользователем'::character varying,
    date timestamp with time zone,
    notes text,
    fio text,
    number character varying(255),
    result character varying(255),
    delete_date timestamp with time zone,

    PRIMARY KEY (id)
);

ALTER TABLE equity.operations_history
    OWNER to renovation_user;